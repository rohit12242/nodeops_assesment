/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../../common.js"
  import type { GovernanceExecutor, GovernanceExecutorInterface } from "../../../governance/GovernanceExecutor.sol/GovernanceExecutor.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_governancePublisher",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_relayer",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ReentrancyGuardReentrantCall",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "proposalId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "target",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "result",
        "type": "bytes"
      }
    ],
    "name": "Executed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "oldPub",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newPub",
        "type": "address"
      }
    ],
    "name": "GovernancePublisherUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "proposalId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bytes32",
        "name": "actionDataHash",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "attestedBy",
        "type": "address"
      }
    ],
    "name": "ProposalAttested",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "oldRelayer",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newRelayer",
        "type": "address"
      }
    ],
    "name": "RelayerUpdated",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "proposalId",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "val",
        "type": "bool"
      }
    ],
    "name": "adminSetAttested",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "proposalId",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "val",
        "type": "bool"
      }
    ],
    "name": "adminSetExecuted",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "attestedPassed",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "proposalId",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "actionData",
        "type": "bytes"
      }
    ],
    "name": "executeIfAuthorized",
    "outputs": [
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "executed",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "governancePublisher",
    "outputs": [
      {
        "internalType": "contract IGovernanceRootPublisher",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "proposalId",
        "type": "uint256"
      },
      {
        "internalType": "bytes32",
        "name": "actionDataHash",
        "type": "bytes32"
      }
    ],
    "name": "markProposalPassed",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "relayer",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_publisher",
        "type": "address"
      }
    ],
    "name": "setGovernancePublisher",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_relayer",
        "type": "address"
      }
    ],
    "name": "setRelayer",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f5ffd5b50604051611d66380380611d66833981810160405281019061003191906102cd565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610099919061031a565b60405180910390fd5b6100b1816101ae60201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e9061038d565b60405180910390fd5b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506103ab565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61029c82610273565b9050919050565b6102ac81610292565b81146102b6575f5ffd5b50565b5f815190506102c7816102a3565b92915050565b5f5f604083850312156102e3576102e261026f565b5b5f6102f0858286016102b9565b9250506020610301858286016102b9565b9150509250929050565b61031481610292565b82525050565b5f60208201905061032d5f83018461030b565b92915050565b5f82825260208201905092915050565b7f7075626c69736865723d300000000000000000000000000000000000000000005f82015250565b5f610377600b83610333565b915061038282610343565b602082019050919050565b5f6020820190508181035f8301526103a48161036b565b9050919050565b6119ae806103b85f395ff3fe608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c8063856c5d441161008a578063b5a1679211610064578063b5a16792146101d5578063c9d9bc5a14610205578063d3ecebd714610221578063f2fde38b14610251576100cd565b8063856c5d441461017f5780638da5cb5b1461019b578063a6c4c08b146101b9576100cd565b80630fc561b7146100d1578063245831e5146101015780633ab0cf511461011f5780636548e9bc1461013b578063715018a6146101575780638406c07914610161575b5f5ffd5b6100eb60048036038101906100e69190610e29565b61026d565b6040516100f89190610ef6565b60405180910390f35b6101096105f1565b6040516101169190610f90565b60405180910390f35b61013960048036038101906101349190610fe4565b610616565b005b61015560048036038101906101509190610fe4565b61074a565b005b61015f610810565b005b610169610823565b604051610176919061101e565b60405180910390f35b6101996004803603810190610194919061106c565b610848565b005b6101a361087c565b6040516101b0919061101e565b60405180910390f35b6101d360048036038101906101ce919061106c565b6108a3565b005b6101ef60048036038101906101ea91906110aa565b6108d7565b6040516101fc91906110e4565b60405180910390f35b61021f600480360381019061021a9190611130565b6108f4565b005b61023b600480360381019061023691906110aa565b610b45565b60405161024891906110e4565b60405180910390f35b61026b60048036038101906102669190610fe4565b610b62565b005b6060610277610be6565b60045f8581526020019081526020015f205f9054906101000a900460ff166102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb906111c8565b60405180910390fd5b60055f8581526020019081526020015f205f9054906101000a900460ff1615610332576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032990611230565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632112142b866040518263ffffffff1660e01b815260040161038d919061125d565b5f60405180830381865afa1580156103a7573d5f5f3e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906103cf91906113cc565b50505050509150505f84846040516103e89291906114c1565b60405180910390209050808214610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90611523565b60405180910390fd5b5f5f8686810190610445919061161a565b915091505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae906116be565b60405180910390fd5b5f5f8373ffffffffffffffffffffffffffffffffffffffff16836040516104de919061170c565b5f604051808303815f865af19150503d805f8114610517576040519150601f19603f3d011682016040523d82523d5f602084013e61051c565b606091505b509150915081610561576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105589061176c565b60405180910390fd5b600160055f8c81526020019081526020015f205f6101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff168a7f687656bcdc248e32bf17a5e7f71e8ad6f00fe0671f9414acaeccc0ed017f90f1836040516105d19190610ef6565b60405180910390a38096505050505050506105ea610c2c565b9392505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61061e610c35565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610683906117d4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1440f97c1ca62fee0b3118be295bcfb90cfc29148f9183857eb0837772ab3c6d60405160405180910390a38060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610752610c35565b8073ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f605ca4e43489fb38b91aa63dd9147cd3847957694b080b9285ec898b34269f0c60405160405180910390a38060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610818610c35565b6108215f610cbc565b565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610850610c35565b8060055f8481526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108ab610c35565b8060045f8481526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b6004602052805f5260405f205f915054906101000a900460ff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a9061183c565b60405180910390fd5b60045f8381526020019081526020015f205f9054906101000a900460ff16156109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d8906118a4565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632112142b846040518263ffffffff1660e01b8152600401610a3c919061125d565b5f60405180830381865afa158015610a56573d5f5f3e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610a7e91906113cc565b5050505050915050818114610ac8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abf90611932565b60405180910390fd5b600160045f8581526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16837fc73152bc6961fd44341f447a7ad5e4dbbdd431fbfccb89e32e8ca9d2d403ef1284604051610b38919061195f565b60405180910390a3505050565b6005602052805f5260405f205f915054906101000a900460ff1681565b610b6a610c35565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bda575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610bd1919061101e565b60405180910390fd5b610be381610cbc565b50565b600260015403610c22576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b610c3d610d7d565b73ffffffffffffffffffffffffffffffffffffffff16610c5b61087c565b73ffffffffffffffffffffffffffffffffffffffff1614610cba57610c7e610d7d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cb1919061101e565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f604051905090565b5f5ffd5b5f5ffd5b5f819050919050565b610da781610d95565b8114610db1575f5ffd5b50565b5f81359050610dc281610d9e565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610de957610de8610dc8565b5b8235905067ffffffffffffffff811115610e0657610e05610dcc565b5b602083019150836001820283011115610e2257610e21610dd0565b5b9250929050565b5f5f5f60408486031215610e4057610e3f610d8d565b5b5f610e4d86828701610db4565b935050602084013567ffffffffffffffff811115610e6e57610e6d610d91565b5b610e7a86828701610dd4565b92509250509250925092565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610ec882610e86565b610ed28185610e90565b9350610ee2818560208601610ea0565b610eeb81610eae565b840191505092915050565b5f6020820190508181035f830152610f0e8184610ebe565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610f58610f53610f4e84610f16565b610f35565b610f16565b9050919050565b5f610f6982610f3e565b9050919050565b5f610f7a82610f5f565b9050919050565b610f8a81610f70565b82525050565b5f602082019050610fa35f830184610f81565b92915050565b5f610fb382610f16565b9050919050565b610fc381610fa9565b8114610fcd575f5ffd5b50565b5f81359050610fde81610fba565b92915050565b5f60208284031215610ff957610ff8610d8d565b5b5f61100684828501610fd0565b91505092915050565b61101881610fa9565b82525050565b5f6020820190506110315f83018461100f565b92915050565b5f8115159050919050565b61104b81611037565b8114611055575f5ffd5b50565b5f8135905061106681611042565b92915050565b5f5f6040838503121561108257611081610d8d565b5b5f61108f85828601610db4565b92505060206110a085828601611058565b9150509250929050565b5f602082840312156110bf576110be610d8d565b5b5f6110cc84828501610db4565b91505092915050565b6110de81611037565b82525050565b5f6020820190506110f75f8301846110d5565b92915050565b5f819050919050565b61110f816110fd565b8114611119575f5ffd5b50565b5f8135905061112a81611106565b92915050565b5f5f6040838503121561114657611145610d8d565b5b5f61115385828601610db4565b92505060206111648582860161111c565b9150509250929050565b5f82825260208201905092915050565b7f70726f706f73616c206e6f7420617474657374656420617320706173736564005f82015250565b5f6111b2601f8361116e565b91506111bd8261117e565b602082019050919050565b5f6020820190508181035f8301526111df816111a6565b9050919050565b7f616c7265616479206578656375746564000000000000000000000000000000005f82015250565b5f61121a60108361116e565b9150611225826111e6565b602082019050919050565b5f6020820190508181035f8301526112478161120e565b9050919050565b61125781610d95565b82525050565b5f6020820190506112705f83018461124e565b92915050565b5f8151905061128481610fba565b92915050565b5f8151905061129881611106565b92915050565b5f815190506112ac81610d9e565b92915050565b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6112ec82610eae565b810181811067ffffffffffffffff8211171561130b5761130a6112b6565b5b80604052505050565b5f61131d610d84565b905061132982826112e3565b919050565b5f67ffffffffffffffff821115611348576113476112b6565b5b61135182610eae565b9050602081019050919050565b5f61137061136b8461132e565b611314565b90508281526020810184848401111561138c5761138b6112b2565b5b611397848285610ea0565b509392505050565b5f82601f8301126113b3576113b2610dc8565b5b81516113c384826020860161135e565b91505092915050565b5f5f5f5f5f5f5f60e0888a0312156113e7576113e6610d8d565b5b5f6113f48a828b01611276565b97505060206114058a828b0161128a565b96505060406114168a828b0161129e565b95505060606114278a828b0161129e565b94505060806114388a828b0161128a565b93505060a088015167ffffffffffffffff81111561145957611458610d91565b5b6114658a828b0161139f565b92505060c06114768a828b0161129e565b91505092959891949750929550565b5f81905092915050565b828183375f83830152505050565b5f6114a88385611485565b93506114b583858461148f565b82840190509392505050565b5f6114cd82848661149d565b91508190509392505050565b7f616374696f6e446174612068617368206d69736d6174636800000000000000005f82015250565b5f61150d60188361116e565b9150611518826114d9565b602082019050919050565b5f6020820190508181035f83015261153a81611501565b9050919050565b5f61154b82610f16565b9050919050565b61155b81611541565b8114611565575f5ffd5b50565b5f8135905061157681611552565b92915050565b5f67ffffffffffffffff821115611596576115956112b6565b5b61159f82610eae565b9050602081019050919050565b5f6115be6115b98461157c565b611314565b9050828152602081018484840111156115da576115d96112b2565b5b6115e584828561148f565b509392505050565b5f82601f83011261160157611600610dc8565b5b81356116118482602086016115ac565b91505092915050565b5f5f604083850312156116305761162f610d8d565b5b5f61163d85828601611568565b925050602083013567ffffffffffffffff81111561165e5761165d610d91565b5b61166a858286016115ed565b9150509250929050565b7f696e76616c6964207461726765740000000000000000000000000000000000005f82015250565b5f6116a8600e8361116e565b91506116b382611674565b602082019050919050565b5f6020820190508181035f8301526116d58161169c565b9050919050565b5f6116e682610e86565b6116f08185611485565b9350611700818560208601610ea0565b80840191505092915050565b5f61171782846116dc565b915081905092915050565b7f657865637574696f6e206661696c6564000000000000000000000000000000005f82015250565b5f61175660108361116e565b915061176182611722565b602082019050919050565b5f6020820190508181035f8301526117838161174a565b9050919050565b7f7075626c69736865723d300000000000000000000000000000000000000000005f82015250565b5f6117be600b8361116e565b91506117c98261178a565b602082019050919050565b5f6020820190508181035f8301526117eb816117b2565b9050919050565b7f6f6e6c792072656c6179657200000000000000000000000000000000000000005f82015250565b5f611826600c8361116e565b9150611831826117f2565b602082019050919050565b5f6020820190508181035f8301526118538161181a565b9050919050565b7f616c7265616479206174746573746564000000000000000000000000000000005f82015250565b5f61188e60108361116e565b91506118998261185a565b602082019050919050565b5f6020820190508181035f8301526118bb81611882565b9050919050565b7f616374696f6e4461746148617368206d69736d617463682077697468207075625f8201527f6c69736865720000000000000000000000000000000000000000000000000000602082015250565b5f61191c60268361116e565b9150611927826118c2565b604082019050919050565b5f6020820190508181035f83015261194981611910565b9050919050565b611959816110fd565b82525050565b5f6020820190506119725f830184611950565b9291505056fea264697066735822122068e446eca9fa937ecfcb0e83edefcf377c28cfaa7a6c5ea92fea24a3fa1c30b664736f6c634300081c0033";

  
      type GovernanceExecutorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: GovernanceExecutorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class GovernanceExecutor__factory extends ContractFactory {
    
      constructor(...args: GovernanceExecutorConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_governancePublisher: AddressLike, _relayer: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_governancePublisher, _relayer, overrides || {});
    };
    override deploy(_governancePublisher: AddressLike, _relayer: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_governancePublisher, _relayer, overrides || {}) as Promise<GovernanceExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): GovernanceExecutor__factory {
      return super.connect(runner) as GovernanceExecutor__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): GovernanceExecutorInterface {
      return new Interface(_abi) as GovernanceExecutorInterface;
    }
    
    override attach(address: string | Addressable): GovernanceExecutor {
      return super.attach(address) as GovernanceExecutor;
    }
  static connect(address: string, runner?: ContractRunner | null): GovernanceExecutor {
      return new Contract(address, _abi, runner) as unknown as GovernanceExecutor;
    }
  }

  
  